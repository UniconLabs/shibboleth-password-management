plugins {
    id 'java'
    id 'idea'
    id 'io.freefair.lombok' version '5.3.0'
    id 'groovy'
    id 'distribution'
    id 'signing'
}

generateLombokConfig.enabled = false

repositories {
    maven { url 'https://build.shibboleth.net/nexus/content/groups/public' }
    mavenCentral()
}

project.ext.config = new ConfigSlurper().parse(new URL("https://raw.githubusercontent.com/UniconLabs/shibboleth-plugin-parent/develop/config.groovy"))

dependencies {
    //Import BOMs
    implementation platform("net.shibboleth.idp:idp-bom:$config.common.shibboleth.version")
    testImplementation platform("org.junit:junit-bom:${project.'junit.jupiter.version'}")

    compileOnly "net.shibboleth.idp:idp-authn-api:$config.common.shibboleth.version"
    compileOnly "net.shibboleth.idp:idp-admin-api:$config.common.shibboleth.version"
    compileOnly "org.springframework:spring-tx:$config.common.spring.version"

    implementation "javax.mail:javax.mail-api:${project.'javax.mail.version'}"
    implementation "org.projectlombok:lombok:$config.common.lombok.version"

    implementation "org.springframework:spring-context-support:$config.common.spring.version", {
        exclude module: "spring-context"
        exclude module: "spring-core"
        exclude module: "spring-beans"
    }
    implementation "org.springframework.data:spring-data-jpa:$config.common.springdata.version", {
        exclude module: "spring-orm"
        exclude module: "spring-aop"
        exclude module: "spring-core"
        exclude module: "spring-beans"
        exclude module: "spring-context"
        exclude module: "spring-tx"
        exclude module: "slf4j-api"
    }

    // Database support
    compile "com.h2database:h2:$config.common.h2.version"
    runtimeOnly "org.postgresql:postgresql:$config.common.postgres.version", {
        exclude module: 'checker-qual'
    }
    runtimeOnly "org.mariadb.jdbc:mariadb-java-client:$config.common.mariadb.version"
    runtimeOnly "mysql:mysql-connector-java:$config.common.mysql.version"

    // hibernate deps
    ['hibernate-core'].each {
        compileOnly "org.hibernate:${it}:$config.common.hibernate.version"
    }

    testRuntimeOnly "org.apache.commons:commons-lang3:$config.common.commonslang3.version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.'junit.jupiter.version'}"
    testImplementation "org.springframework:spring-test:${project.'spring.version'}"
    testImplementation "org.springframework:spring-beans:${project.'spring.version'}"
    testImplementation "com.google.guava:guava:${project.'guava.version'}"
    testImplementation "com.unboundid:unboundid-ldapsdk:${project.'unboundid.verion'}"

}

test {
    useJUnitPlatform()
}